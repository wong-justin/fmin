finite_state_machine = {


states = {
	FILTERING,
	NAVIGATING,
	// COMMAND_FORMATION,
}

actions = {
	GOTO_DIR(model, dir),
	UPDATE_FILTER(model, filter_text),
	CLEAR_FILTER_AND_RESUME_NAVIGATING(model),
	RESUME_NAVIGATING,
	RESUME_FILTERING,
	UPDATE_NAVIGATION,
}

behaviors = {
	[GOTO_DIR]: (model, dir) -> {
	model.entries = dir.get_entries
	model.focused_entry_index = 0 or None
	model.filter_text = ""
	model.state = FILTERING
	},
	[UPDATE_FILTER]: (model, filter_text) -> {
	model.filter_text = filter_text
	model.entries = model.entries.filter |x| filter_text in x.name.lower
	model.focused_entry_index = find_prev_entry or 0 or None ?
	model.state = FILTERING
	}	
	[RESUME_NAVIGATING]: (model) -> {
	model.state = NAVIGATING
	}
	[RESUME_FILTERING]: (model) -> {
	model.state = FILTERING
	}
	[UPDATE_HIGHLIGHTED_ENTRY]: (model, focused_entry_index) {
	model.focused_entry_index = focused_entry_index
	model.state = NAVIGATING
	}
	
views = {
	...,
}


		
		

	  
